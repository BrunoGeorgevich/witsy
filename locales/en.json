{
  "common": {
    "esc": "Esc",
    "save": "Save",
    "cancel": "Cancel",
    "ok": "OK",
    "label": "Label",
    "icon": "Icon",
    "shortcut": "Shortcut",
    "name": "Name",
    "create": "Create",
    "reset": "Reset",
    "required": {
      "fieldsRequired": "Make sure you enter a value for the required fields."
    },
    "warning": "Warning",
    "delete": "Delete",
    "documents": "Documents",
    "files": "Files",
    "folder": "Folder",
    "embeddings": "Embeddings",
    "confirmation": {
      "deleteRepository": "Are you sure you want to delete this repository?",
      "deleteDocument": "Are you sure you want to delete this document?",
      "cannotUndo": "You can't undo this action.",
      "deleteMemory": "Are you sure you want to delete this memory?",
      "unsavedChanges": "You have unsaved changes. You will lose your work if you close this window.",
      "doNotClose": "Do not close",
      "closeAnyway": "Close anyway",
      "continueQuestion": "You have unsaved changes. You will lose your work if you continue.",
      "continue": "Continue"
    },
    "actions": {
      "addFiles": "Add Files...",
      "addFolder": "Add Folder..."
    },
    "prompt": "Prompt",
    "add": "Add",
    "remove": "Remove",
    "pick": "Pick",
    "type": "Type",
    "url": "URL",
    "command": "Command",
    "arguments": "Arguments",
    "install": "Install",
    "key": "Key",
    "value": "Value",
    "browse": "Browse",
    "close": "Close",
    "load": "Load",
    "clear": "Clear",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "default": "Default",
    "low": "Low",
    "medium": "Medium",
    "high": "High",
    "workingWith": "Working with",
    "askMeAnything": "Ask me anything",
    "estimatedCost": "Estimated cost:",
    "basedOn": "based on",
    "costsAsOf": "costs as of",
    "clickToStart": "Click the blob to start chatting",
    "undo": "Undo",
    "redo": "Redo",
    "copy": "Copy",
    "read": "Read",
    "copied": "Copied",
    "settings": "Settings",
    "stop": "Stop",
    "record": "Record",
    "insert": "Insert",
    "llmProvider": "LLM Provider",
    "llmModel": "LLM Model",
    "rename": "Rename",
    "move": "Move",
    "newChat": "New chat",
    "search": "Searchâ€¦",
    "refresh": "Refresh",
    "refreshing": "Refreshingâ€¦",
    "done": "Done!",
    "error": "Error!",
    "favorites": {
      "add": "Add to favorites",
      "remove": "Remove from favorites"
    },
    "retry": "Retry",
    "edit": "Edit",
    "fork": "Fork",
    "usage": "Usage",
    "pull": "Pull",
    "replace": "Replace",
    "chat": "Chat",
    "write": "Write",
    "language": {
      "auto": "ðŸ¤– Let LLM decide"
    }
  },
  "promptAnywhere": {
    "actions": {
      "clearResponse": "Clear response",
      "saveChat": "Save chat",
      "continueInChat": "Continue in chat",
      "retry": "Retry"
    }
  },
  "chat": {
    "editor": {
      "title": "Title",
      "validation": {
        "requiredFields": "All fields are required",
        "titleRequired": "Make sure you enter a title for this chat."
      }
    },
    "actions": {
      "saveChat": "Save Chat",
      "makeTemporary": "Temporary Chat",
      "rename": "Rename Chat",
      "exportPdf": "Export as PDF"
    }
  },
  "commands": {
    "defaults": {
      "title": "Commands defaults",
      "lastOneUsed": "Last one used"
    },
    "editor": {
      "title": "Command details",
      "prompt": "Prompt",
      "useDefault": "Use commands default",
      "inputPlaceholder": "{input} will be subsituted with highlighted text",
      "notEditable": "This command is not editable. The content captured will be available in the prompt for you to ask anything about it!",
      "validation": {
        "requiredFields": "All fields marked with * are required.",
        "inputPlaceholder": "The template must contain the {input} placeholder."
      }
    },
    "picker": {
      "workingWith": "Working with"
    }
  },
  "engine": {
    "create": {
      "title": "Create Custom Engine",
      "description": "Create a new custom engine based on an API standard.",
      "apiSpecification": "API Specification",
      "apiBaseURL": "API Base URL",
      "apiKey": "API key",
      "validation": {
        "nameBaseURLRequired": "Name and Base URL are required"
      }
    },
    "modelPicker": {
      "title": "LLM Provider and Model"
    }
  },
  "docRepo": {
    "config": {
      "title": "Document Repositories defaults",
      "maxDocumentSize": "Max document size",
      "chunkSize": "Chunk size",
      "chunkOverlap": "Chunk overlap",
      "searchResultCount": "Search result count",
      "relevanceCutOff": "Search relevance cut-off",
      "millionCharacters": "million characters",
      "characters": "characters"
    },
    "create": {
      "title": "Create Document Repository",
      "embeddingWarning": "embedding model cannot be changed once repository is created",
      "defaultName": "Document Repository"
    },
    "repositories": {
      "title": "Document Repositories",
      "noRepositories": "You don't have any repositories yet.",
      "clickToCreate": "Click on the + button to create one."
    }
  },
  "experts": {
    "editor": {
      "title": "Expert details",
      "triggerApps": "Trigger Apps",
      "systemExpertNotice": "System Experts cannot be edited. Make a copy to customize this expert.",
      "triggerAppsDescription": "The prompt will be automatically selected when Prompt Anywhere is called from one of these applications",
      "validation": {
        "requiredFields": "All fields marked with * are required."
      }
    }
  },
  "mcp": {
    "serverEditor": {
      "title": "MCP Server Configuration",
      "type": {
        "stdio": "stdio",
        "sse": "SSE",
        "smithery": "Smithery.ai"
      },
      "serverPackage": "Server Package",
      "environmentVariables": "Environment Variables",
      "validation": {
        "requiredFields": "Some fields are required",
        "commandRequired": "Make sure you enter a command for this server.",
        "urlRequired": "Make sure you enter a URL for this server.",
        "packageRequired": "Make sure you enter a package name for this server."
      },
      "selectCommand": "Select command"
    },
    "variableEditor": {
      "title": "MCP Environment Variable",
      "validation": {
        "keyRequired": "Make sure you enter a key for this variable."
      }
    }
  },
  "memory": {
    "inspector": {
      "title": "Memory Contents",
      "noFacts": "No facts stored so far",
      "memory": "Memory"
    }
  },
  "modelSettings": {
    "plugins": "Plugins",
    "contextWindowSize": "Context Window Size",
    "maxCompletionTokens": "Max Completion Tokens",
    "temperature": "Temperature [0.0 â€¦ 2.0]",
    "topK": "TopK / Logprobs [0 â€¦ 20]",
    "topP": "TopP [0.0 â€¦ 1.0]",
    "extendedThinking": "Extended Thinking",
    "reasoningEffort": "Reasoning Effort",
    "defaultForModel": "Defaults for this model",
    "createNewModel": "Create new model",
    "placeholder": {
      "defaultModelValue": "Default model value when empty"
    },
    "errors": {
      "noProviderOrModel": {
        "title": "No LLM Provider or Model selected",
        "text": "Make sure you select a model for this chat."
      },
      "invalid": {
        "title": "Invalid {name}",
        "mustBeNumber": "Must be a number",
        "mustBeBetween": "Must be between {min} and {max}",
        "mustBeGreaterThan": "Must be greater than {min}",
        "mustBeLessThan": "Must be less than {max}"
      }
    },
    "createOllama": {
      "title": "Enter new model name"
    }
  },
  "realtimeChat": {
    "requestingMicrophone": "Requesting microphone access...",
    "establishingConnection": "Establishing connection...",
    "sessionEstablished": "Session established successfully!",
    "errorPrefix": "Error: "
  },
  "scratchpad": {
    "placeholder": "Start typing your document or\nask Witsy to write something for you!\n\nOnce you started you can ask Witsy\nto make modification on your document.\n\nIf you highligh a portion of your text,\nWitsy will only update this portion.\n\nAlso check out the Writing Assistant\nin the action bar in the lower right corner!\n\nGive it a go!",
    "fileError": "This file is not a scratchpad file. Please try again with another file.",
    "generationError": "Error while generating text",
    "loadingError": "Error while loading scratchpad file"
  },
  "settings": {
    "tabs": {
      "general": "General",
      "appearance": "Appearance",
      "commands": "Commands",
      "experts": "Experts",
      "shortcuts": "Shortcuts",
      "models": "Models",
      "plugins": "Plugins",
      "voice": "Voice",
      "advanced": "Advanced"
    },
    "advanced": {
      "autoVisionSwitch": "Automatically switch to vision model",
      "autoSavePrompt": "Always save prompt sessions in chat history",
      "conversationLength": "Conversation length",
      "imageResize": "Image resize",
      "imageResizeOptions": {
        "none": "No resize",
        "size": "Resize largest dimension to {size} pixels"
      },
      "systemInstructions": "System instructions",
      "resetToDefault": "Reset to default value",
      "instructions": {
        "chat": "Chat - Instructions",
        "docquery": "Document query - Instructions",
        "titling": "Chat title - Instructions",
        "titling_user": "Chat title - Prompt",
        "image_plugin": "Image Plugin - Description (1024 characters max)",
        "video_plugin": "Video Plugin - Description (1024 characters max)",
        "memory_plugin": "Memory Plugin - Description (1024 characters max)",
        "scratchpad_system": "Scratchpad - Instructions",
        "scratchpad_prompt": "Scratchpad - Prompt",
        "scratchpad_spellcheck": "Scratchpad - Spellcheck",
        "scratchpad_improve": "Scratchpad - Improve",
        "scratchpad_takeaways": "Scratchpad - Takeaways",
        "scratchpad_title": "Scratchpad - Title",
        "scratchpad_simplify": "Scratchpad - Simplify",
        "scratchpad_expand": "Scratchpad - Expand",
        "scratchpad_complete": "Scratchpad - Complete"
      }
    },
    "engines": {
      "apiKey": "API key",
      "getApiKey": "Get your API key",
      "chatModel": "Chat model",
      "anthropic": {
        "aboutModels": "More about Anthropic models",
        "pricing": "Anthropic pricing"
      },
      "cerebras": {
        "aboutModels": "More about Cerebras models"
      },
      "deepseek": {
        "aboutModels": "More about DeepSeek models"
      },
      "google": {
        "aboutModels": "More about Google models",
        "pricing": "Google pricing"
      },
      "groq": {
        "aboutModels": "More about Groq models",
        "pricing": "Groq pricing"
      },
      "mistralai": {
        "aboutModels": "More about MistralAI models",
        "pricing": "MistralAI pricing"
      },
      "ollama": {
        "apiBaseURL": "API Base URL",
        "confirmDelete": "Are you sure you want to delete this model?",
        "browseModels": "Browse models"
      },
      "openai": {
        "aboutModels": "More about OpenAI models",
        "pricing": "OpenAI pricing",
        "apiBaseURL": "API Base URL"
      },
      "openrouter": {
        "aboutModels": "More about OpenRouter models"
      },
      "xai": {
        "aboutModels": "More about xAI models"
      },
      "custom": {
        "apiSpecification": "API Specification",
        "apiBaseURL": "API Base URL",
        "modelPlaceholder": "Enter a model name or select one",
        "create": "Create engine",
        "delete": "Delete engine",
        "confirmDelete": "Are you sure you want to delete this custom provider?"
      }
    },
    "appearance": {
      "theme": "Appearance",
      "themes": {
        "light": "Light",
        "dark": "Dark",
        "system": "System"
      },
      "darkTint": "Dark tint",
      "tints": {
        "black": "Black",
        "blue": "Blue"
      },
      "chatTheme": "Chat theme",
      "chatThemes": {
        "openai": "OpenAI",
        "conversation": "Conversation"
      },
      "chatListLayout": "Chat list layout",
      "chatListLayouts": {
        "cozy": "Cozy",
        "compact": "Compact"
      },
      "chatFont": "Chat font",
      "chatFontSize": "Chat font size"
    },
    "plugins": {
      "browse": {
        "description": "This plugin allows LLM engines to download content from the Internet and use it to generate more accurate responses.",
        "title": "Download"
      },
      "search": {
        "title": "Web Search",
        "description": "This plugin allows LLM engines to search the Internet and use the results as input to generate up-to-date responses.",
        "engine": "Engine",
        "engines": {
          "local": "Local Browser Search (EXPERIMENTAL)",
          "tavily": "Tavily"
        },
        "tavilyApiKey": "Tavily API Key",
        "getApiKey": "Get your API key",
        "contentLength": "Content Length",
        "truncateTo": "Truncate to",
        "characters": "characters (0 for full content)",
        "truncationWarning": "WARNING: Truncation length will impact input tokens count and therefore request costs"
      },
      "python": {
        "title": "Python",
        "warning": "Warning!",
        "description1": "Enabling this plugin will allow LLM engines to run arbitray code on your computer.",
        "description2": "There is no way to predict if the code that LLM engines will generate is safe or not.",
        "useAtOwnRisk": "Use at your own risk",
        "binaryPath": "Python Binary",
        "search": "Search"
      },
      "image": {
        "title": "Text-to-Image",
        "description": "This plugin allows LLM engines to create images from a text description.",
        "provider": "Provider",
        "imageModel": "Image model",
        "openai": {
          "apiKeyReminder": "Make sure you enter your OpenAI API key in the Models pane of Witsy Settings."
        },
        "replicate": {
          "modelPlaceholder": "Enter a model or select from the list",
          "aboutModels": "More about Replicate models"
        },
        "huggingface": {
          "modelPlaceholder": "Enter a model or select from the list",
          "aboutModels": "More about Hugging Face models"
        }
      },
      "memory": {
        "title": "Memory",
        "description": "This plugin allows LLM engines to store and retrieve information about you, making their answers more personalized.",
        "contents": "Contents",
        "view": "View",
        "resetConfirmation": {
          "title": "Are you sure you want to reset the memory and lose all facts about you?"
        }
      },
      "video": {
        "title": "Text-to-Video",
        "description": "This plugin allows LLM engines to create videos from a text description.",
        "provider": "Provider",
        "videoModel": "Video model",
        "replicate": {
          "modelPlaceholder": "Enter a model or select from the list",
          "aboutModels": "More about Replicate models"
        }
      },
      "youtube": {
        "title": "YouTube",
        "description": "This plugin allows LLM engines to download transcripts of YouTube videos."
      },
      "vega": {
        "title": "Vega",
        "description": "This plugin allows LLM engines to create charts image based on data using the Vega visualisation library."
      },
      "mcp": {
        "title": "MCP",
        "description": "This plugin allows LLM engines to access",
        "modelContextProtocol": "Model Context Protocol",
        "servers": "servers. Discover and install MCP servers from the",
        "smithery": "Smithery",
        "noServersFound": "No MCP Servers found",
        "connectedToServers": "Connected to {count} MCP server{count > 1 ? 's' : ''}",
        "totalTools": "Total of {count} service{count > 1 ? 's' : ''} available",
        "noTools": "No tools available",
        "mcpServers": "MCP Servers:",
        "target": "Target",
        "status": "Status",
        "restartClient": "Restart client",
        "addCustomServer": "Add custom serverâ€¦",
        "importSmitheryServer": "Import Smithery.ai serverâ€¦",
        "confirmDelete": "Are you sure you want to delete this server?",
        "serverLogs": "MCP Server Logs",
        "failedToInstall": "Failed to install server",
        "copyInstallCommand": "You can copy the install command to your clipboard and try it in a Terminal."
      },
      "nestor": {
        "title": "Nestor",
        "description": "This plugin allows LLM engines to access local API on the network. Check",
        "githubLink": "https://github.com/nbonamy/nestor",
        "noHubs": "No Nestor hubs available",
        "connectedToHubs": "Connected to {count} Nestor hub{count > 1 ? 's' : ''}",
        "totalServices": "Total of {count} service{count > 1 ? 's' : ''} available",
        "noServices": "No service available"
      }
    },
    "general": {
      "promptLLMModel": "Prompt LLM Model",
      "lastOneUsed": "Last one used",
      "answerIn": "Answer in",
      "resetTips": "Reset tips",
      "runAtLogin": "Run at login",
      "hideOnStartup": "Hide main window on start",
      "keepInStatusBar": "Keep in Status Bar"
    },
    "shortcuts": {
      "newPrompt": "New prompt",
      "newChat": "New chat",
      "newScratchpad": "New Scratchpad",
      "aiCommands": "AI Commands",
      "aiCommandsUsage": "Usage: Highlight your text, press keyboard shortcut then choose an Al command",
      "readAloud": "Read Aloud",
      "readAloudUsage": "Usage: Highlight your text, press keyboard shortcut",
      "dictation": "Dictation",
      "voiceMode": "Voice Mode"
    },
    "voice": {
      "spokenLanguage": "Spoken Language",
      "automatic": "ðŸ¤– Automatic",
      "engine": "Engine",
      "model": "Model",
      "silenceDetection": "Silence Detection",
      "silenceOptions": {
        "disabled": "Disabled",
        "oneSecond": "1 second",
        "twoSeconds": "2 seconds",
        "threeSeconds": "3 seconds",
        "fourSeconds": "4 seconds",
        "fiveSeconds": "5 seconds"
      },
      "selectModel": "Select a model",
      "initializing": "Initializing...",
      "downloading": "Downloading: {percent}%",
      "verifying": "Verifying: {percent}%",
      "downloadComplete": "Download completed!",
      "verificationComplete": "Verification completed!",
      "deleteLocalModels": "Delete all models stored locally",
      "openaiApiKeyReminder": "Make sure you enter your OpenAI API key in the Models pane.",
      "groqApiKeyReminder": "Make sure you enter your Groq API key in the Models pane.",
      "initializationError": "An error occured during initialization. Please try again.",
      "downloadConfirmation": {
        "title": "This model needs to be downloaded on your computer. Do you want to proceed?"
      },
      "deleteConfirmation": {
        "title": "Are you sure you want to delete all local models?",
        "text": "You will have to download all local models again."
      },
      "tts": {
        "voice": "Voice",
        "kokoroReminder": "Provided",
        "serviceDisclaimer": "The service may stop working at any point in time.",
        "sampleText": "Welcome to Witsy, the ultimate AI desktop assistant."
      },
      "tabs": {
        "speechToText": "Speech-to-Text",
        "textToSpeech": "Text-to-Speech"
      }
    },
    "commands": {
      "new": "New",
      "more": "More",
      "defaults": "Defaults",
      "export": "Export",
      "import": "Import",
      "selectAll": "Select All",
      "unselectAll": "Unselect All",
      "confirmDelete": "Are you sure you want to delete this command?",
      "importSuccess": "Commands file imported successfully",
      "importError": "Failed to import commands file",
      "exportSuccess": "Commands file exported successfully",
      "exportError": "Failed to export commands file"
    },
    "experts": {
      "new": "New",
      "copy": "Copy",
      "more": "More",
      "export": "Export",
      "import": "Import",
      "selectAll": "Select All",
      "unselectAll": "Unselect All",
      "sortAlphabetically": "Sort Alphabetically",
      "confirmDelete": "Are you sure you want to delete this expert?",
      "importSuccess": "Experts file imported successfully",
      "importError": "Failed to import experts file",
      "exportSuccess": "Experts file exported successfully",
      "exportError": "Failed to export experts file"
    }
  },
  "transcribe": {
    "clickToRecord": "Click the record button when you are ready!",
    "errorMicrophone": "Error accessing microphone",
    "errorSTTNotReady": "Speech-to-text engine not ready",
    "errorTranscription": "Error occurred during transcription"
  },
  "chatList": {
    "displayMode": {
      "timeline": "Timeline",
      "folders": "Folders"
    },
    "folder": {
      "actions": {
        "newChat": "New chat",
        "delete": "Delete folder"
      }
    },
    "timeline": {
      "today": "Today",
      "yesterday": "Yesterday",
      "last7days": "Last 7 days",
      "last14days": "Last 14 days",
      "last30days": "Last 30 days",
      "earlier": "Earlier"
    }
  },
  "embedding": {
    "provider": "Embedding Provider",
    "model": "Embedding Model",
    "browse": "Browse models",
    "apiKeyReminder": "Make sure you enter your API key in the Models pane of Witsy Settings."
  },
  "emptyChat": {
    "tips": {
      "switchProvider": "Click here to switch to a different chat bot provider!",
      "switchModel": "Click here to switch to a different chat bot model!"
    },
    "settings": {
      "needsConfiguration": "This engine needs to be configured first! Do you want to open the Settings?",
      "configure": "Configure"
    }
  },
  "message": {
    "actions": {
      "retryConfirm": {
        "title": "Are you sure you want to generate this message again?",
        "text": "Current version will be lost.",
        "confirmButton": "OK. Don't ask again.",
        "denyButton": "OK"
      },
      "usage": {
        "title": "Total tokens: {total}",
        "prompt": "Prompt tokens: {prompt}",
        "response": "Response tokens: {completion}",
        "reasoning": "Reasoning tokens: {reasoning}"
      }
    }
  },
  "modelPull": {
    "browse": "Browse models",
    "label": "Pull model",
    "placeholder": "Enter a model name to pull or select one",
    "progress": "Pulling model...",
    "error": "Error pulling model"
  },
  "prompt": {
    "expert": {
      "clear": "Clear expert"
    },
    "conversation": {
      "stop": "Stop conversation",
      "startAuto": "Start automatic conversation",
      "startPTT": "Start push-to-talk conversation",
      "placeholders": {
        "auto": "You can start talking now...",
        "ptt": "Press and hold space to talk..."
      }
    }
  },
  "sidebar": {
    "newFolder": {
      "title": "New Folder",
      "placeholder": "New Folder Name"
    },
    "select": "Select"
  }
}